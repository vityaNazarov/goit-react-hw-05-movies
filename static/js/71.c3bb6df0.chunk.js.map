{"version":3,"file":"static/js/71.c3bb6df0.chunk.js","mappings":"6LACA,EAAuB,4B,SCIjBA,EAAmB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACpBC,GAAWC,EAAAA,EAAAA,MAEXC,EAAWH,EAAOI,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OAC1B,yBACE,SAAC,KAAD,CACEC,UAAWC,EACXC,GAAE,kBAAaJ,GACfK,MAAO,CAAEC,KAAMV,GAHjB,SAKGK,KANID,EADiB,IAY5B,OAAO,wBAAKF,GACb,EAEDJ,EAAiBa,aAAe,CAC9BZ,OAAQ,IAYV,O,+JCDA,EA7BqB,WACnB,OAA4Ba,EAAAA,EAAAA,UAAS,IAArC,eAAOb,EAAP,KAAec,EAAf,KACA,GAA8BD,EAAAA,EAAAA,WAAS,GAAvC,eAAOE,EAAP,KAAgBC,EAAhB,KACA,GAA0BH,EAAAA,EAAAA,UAAS,MAAnC,eAAOI,EAAP,KAAcC,EAAd,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,oGAEhBJ,GAAW,GAFK,UAGGK,EAAAA,EAAAA,MAHH,OAGVC,EAHU,OAIhBR,EAAUQ,EAAKC,SAJC,gDAMhBL,EAAS,KAAMM,SANC,yBAQhBR,GAAW,GARK,4EAAH,qDAWjBI,GACD,GAAE,CAACN,EAAWE,EAAYE,KAGzB,2BACGH,IAAW,SAACU,EAAA,EAAD,IACXR,IAAS,gDACTjB,EAAO0B,OAAS,IAAK,SAAC3B,EAAA,EAAD,CAAkBC,OAAQA,MAGrD,EChCD,EAA4B,6BAA5B,EAAgE,wBCUhE,EATiB,WACf,OACE,iBAAKO,UAAWC,EAAhB,WACE,eAAID,UAAWC,EAAf,6BACA,SAAC,EAAD,MAGL,C,yLCPKmB,E,QAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,sCAOAV,EAAS,mCAAG,2GAAOW,EAAP,+BAAc,EAAd,SACAL,EAASM,IAAI,sBAAuB,CACzDH,OAAQ,CACNE,KAAAA,EACAE,SAAU,WAJS,uBACfZ,EADe,EACfA,KADe,kBAQhBA,GARgB,2CAAH,qDAaTa,EAAY,mCAAG,WAAM9B,GAAN,yFACHsB,EAASM,IAAT,iBAAuB5B,GAAM,CAClDyB,OAAQ,CACNI,SAAU,WAHY,uBAClBZ,EADkB,EAClBA,KADkB,kBAOnBA,GAPmB,2CAAH,sDAaZc,EAAa,mCAAG,WAAM/B,GAAN,yFACJsB,EAASM,IAAT,iBAAuB5B,EAAvB,YAAqC,CAC1DyB,OAAQ,CACNI,SAAU,WAHa,uBACnBZ,EADmB,EACnBA,KADmB,kBAOpBA,GAPoB,2CAAH,sDAabe,EAAe,mCAAG,WAAOhC,GAAP,8FAAW2B,EAAX,+BAAkB,EAAlB,SACNL,EAASM,IAAT,iBAAuB5B,EAAvB,YAAqC,CAC1DyB,OAAQ,CACNI,SAAU,QACVF,KAAAA,KAJyB,uBACrBV,EADqB,EACrBA,KADqB,kBAQtBA,GARsB,2CAAH,sDAcfgB,EAAgB,mCAAG,WAAOC,GAAP,8FAAcP,EAAd,+BAAqB,EAArB,SACPL,EAASM,IAAI,gBAAiB,CACnDH,OAAQ,CACNS,MAAAA,EACAL,SAAU,QACVF,KAAAA,EACAQ,eAAe,KANW,uBACtBlB,EADsB,EACtBA,KADsB,kBAUvBA,GAVuB,2CAAH,qD","sources":["webpack://react-homework-template/./src/components/SearchMovies/movies-search.module.css?ff78","components/SearchMovies/SearchMoviesList.jsx","components/SearchMovies/SearchMovies.jsx","webpack://react-homework-template/./src/pages/HomePage/home-page.module.css?ebe0","pages/HomePage/HomePage.jsx","services/api/posts.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"link\":\"movies-search_link__Tcyxi\"};","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport css from './movies-search.module.css';\n\nconst SearchMoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  const elements = movies.map(({ id, title }) => (\n    <li key={id}>\n      <Link\n        className={css.link}\n        to={`/movies/${id}`}\n        state={{ from: location }}\n      >\n        {title}\n      </Link>\n    </li>\n  ));\n\n  return <ul>{elements}</ul>;\n};\n\nSearchMoviesList.defaultProps = {\n  movies: [],\n};\n\nSearchMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default SearchMoviesList;\n","import { useState, useEffect } from 'react';\nimport { Loader } from '../../components/Loader/Loader';\nimport { getMovies } from '../../services/api/posts';\n\nimport SearchMoviesList from 'components/SearchMovies/SearchMoviesList';\n\nconst SearchMovies = () => {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        setLoading(true);\n        const data = await getMovies();\n        setMovies(data.results);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchMovies();\n  }, [setMovies, setLoading, setError]);\n\n  return (\n    <div>\n      {loading && <Loader />}\n      {error && <p>...Posts load failed</p>}\n      {movies.length > 0 && <SearchMoviesList movies={movies} />}\n    </div>\n  );\n};\n\nexport default SearchMovies;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"home-page_container__RaHax\",\"text\":\"home-page_text__ml47M\"};","import SearchMovies from 'components/SearchMovies/SearchMovies';\nimport css from './home-page.module.css';\nconst HomePage = () => {\n  return (\n    <div className={css.container}>\n      <h2 className={css.text}>Tranding today</h2>\n      <SearchMovies />\n    </div>\n  );\n};\n\nexport default HomePage;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '9fae0fdf266213c68361ca578a95b948',\n  },\n});\n\n// Cписок найпопулярніших фільмів на сьогодні для створення колекції на головній сторінці\n// https://api.themoviedb.org/3/trending/all/day?api_key=<<api_key>>\n\nexport const getMovies = async (page = 1) => {\n  const { data } = await instance.get('/trending/movie/day', {\n    params: {\n      page,\n      language: 'en-US',\n    },\n  });\n\n  return data;\n};\n\n// Запит повної інформації про фільм для сторінки кінофільму.\n\nexport const getInfoMovie = async id => {\n  const { data } = await instance.get(`/movie/${id}`, {\n    params: {\n      language: 'en-US',\n    },\n  });\n\n  return data;\n};\n\n// Запит інформації про акторський склад для сторінки кінофільму.\n// https://api.themoviedb.org/3/movie/{movie_id}/credits?api_key=<<api_key>>&language=en-US\n\nexport const getInfoActors = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`, {\n    params: {\n      language: 'en-US',\n    },\n  });\n\n  return data;\n};\n\n// Запит оглядів для сторінки кінофільму.\n// https://api.themoviedb.org/3/movie/{movie_id}/reviews?api_key=<<api_key>>&language=en-US&page=1\n\nexport const getReviewMovies = async (id, page = 1) => {\n  const { data } = await instance.get(`/movie/${id}/reviews`, {\n    params: {\n      language: 'en-US',\n      page,\n    },\n  });\n\n  return data;\n};\n\n// Пошук фільму за ключовим словом на сторінці фільмів.\n// https://api.themoviedb.org/3/search/movie?api_key=<<api_key>>&language=en-US&page=1&include_adult=false\n\nexport const getKeywordMovies = async (query, page = 1) => {\n  const { data } = await instance.get('/search/movie', {\n    params: {\n      query,\n      language: 'en-US',\n      page,\n      include_adult: false,\n    },\n  });\n\n  return data;\n};\n"],"names":["SearchMoviesList","movies","location","useLocation","elements","map","id","title","className","css","to","state","from","defaultProps","useState","setMovies","loading","setLoading","error","setError","useEffect","fetchMovies","getMovies","data","results","message","Loader","length","instance","axios","baseURL","params","api_key","page","get","language","getInfoMovie","getInfoActors","getReviewMovies","getKeywordMovies","query","include_adult"],"sourceRoot":""}