{"version":3,"file":"static/js/918.38224549.chunk.js","mappings":"uQACA,EAAkC,mC,SCsDlC,EAhDiB,WACf,OAAoCA,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAEQC,GAAOC,EAAAA,EAAAA,MAAPD,IAERE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,mCAAG,oGAEpBN,GAAW,GAFS,UAGFO,EAAAA,EAAAA,IAAcJ,GAHZ,OAGdK,EAHc,OAIpBV,EAAcU,EAAIC,MAJE,gDAMpBP,EAAS,KAAMQ,SANK,yBAQpBV,GAAW,GARS,4EAAH,qDAWrBM,GACD,GAAE,CAACH,EAAIH,EAAYE,IAEpB,IAAMS,EAAWd,EAAWe,KAC1B,gBAAGT,EAAH,EAAGA,GAAIU,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,cAAeC,EAApC,EAAoCA,KAAMC,EAA1C,EAA0CA,UAA1C,OACE,gBAAaC,UAAWC,EAAxB,WACE,gBACEC,IAAK,kCAAoCN,EACzCO,IAAKN,EACLO,MAAO,OAET,4BACE,uBAAIN,KACJ,uCAAeC,UARVb,EADX,IAeF,OACE,4BACE,wBAAKQ,IACJZ,IAAW,SAACuB,EAAA,EAAD,IACXrB,IAAS,iDACRJ,EAAW0B,SAAU,mEAG5B,C,yLCnDKC,E,QAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,sCAOAC,EAAS,mCAAG,2GAAOC,EAAP,+BAAc,EAAd,SACAN,EAASO,IAAI,sBAAuB,CACzDJ,OAAQ,CACNG,KAAAA,EACAE,SAAU,WAJS,uBACfC,EADe,EACfA,KADe,kBAQhBA,GARgB,2CAAH,qDAaTC,EAAY,mCAAG,WAAM/B,GAAN,yFACHqB,EAASO,IAAT,iBAAuB5B,GAAM,CAClDwB,OAAQ,CACNK,SAAU,WAHY,uBAClBC,EADkB,EAClBA,KADkB,kBAOnBA,GAPmB,2CAAH,sDAaZ1B,EAAa,mCAAG,WAAMJ,GAAN,yFACJqB,EAASO,IAAT,iBAAuB5B,EAAvB,YAAqC,CAC1DwB,OAAQ,CACNK,SAAU,WAHa,uBACnBC,EADmB,EACnBA,KADmB,kBAOpBA,GAPoB,2CAAH,sDAabE,EAAe,mCAAG,WAAOhC,GAAP,8FAAW2B,EAAX,+BAAkB,EAAlB,SACNN,EAASO,IAAT,iBAAuB5B,EAAvB,YAAqC,CAC1DwB,OAAQ,CACNK,SAAU,QACVF,KAAAA,KAJyB,uBACrBG,EADqB,EACrBA,KADqB,kBAQtBA,GARsB,2CAAH,sDAcfG,EAAgB,mCAAG,WAAOC,GAAP,8FAAcP,EAAd,+BAAqB,EAArB,SACPN,EAASO,IAAI,gBAAiB,CACnDJ,OAAQ,CACNU,MAAAA,EACAL,SAAU,QACVF,KAAAA,EACAQ,eAAe,KANW,uBACtBL,EADsB,EACtBA,KADsB,kBAUvBA,GAVuB,2CAAH,qD","sources":["webpack://react-homework-template/./src/pages/CastPage/cast-page.module.css?5ad3","pages/CastPage/CastPage.jsx","services/api/posts.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"descriptionCast\":\"cast-page_descriptionCast__WuKXp\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getInfoActors } from 'services/api/posts';\nimport { Loader } from '../../components/Loader/Loader';\nimport css from './cast-page.module.css';\n\nconst CastPage = () => {\n  const [infoActors, setInfoActors] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const { id } = useParams();\n\n  useEffect(() => {\n    const fetchInfoActors = async () => {\n      try {\n        setLoading(true);\n        const res = await getInfoActors(id);\n        setInfoActors(res.cast);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchInfoActors();\n  }, [id, setLoading, setError]);\n\n  const elements = infoActors.map(\n    ({ id, profile_path, original_name, name, character }) => (\n      <li key={id} className={css.descriptionCast}>\n        <img\n          src={'https://image.tmdb.org/t/p/w300' + profile_path}\n          alt={original_name}\n          width={150}\n        />\n        <div>\n          <p>{name}</p>\n          <p>Character: {character}</p>\n        </div>\n      </li>\n    )\n  );\n\n  return (\n    <div>\n      <ul>{elements}</ul>\n      {loading && <Loader />}\n      {error && <p>...Posts load failed</p>}\n      {!infoActors.length && <p>We don't have any cast for this movie</p>}\n    </div>\n  );\n};\n\nexport default CastPage;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '9fae0fdf266213c68361ca578a95b948',\n  },\n});\n\n// Cписок найпопулярніших фільмів на сьогодні для створення колекції на головній сторінці\n// https://api.themoviedb.org/3/trending/all/day?api_key=<<api_key>>\n\nexport const getMovies = async (page = 1) => {\n  const { data } = await instance.get('/trending/movie/day', {\n    params: {\n      page,\n      language: 'en-US',\n    },\n  });\n\n  return data;\n};\n\n// Запит повної інформації про фільм для сторінки кінофільму.\n\nexport const getInfoMovie = async id => {\n  const { data } = await instance.get(`/movie/${id}`, {\n    params: {\n      language: 'en-US',\n    },\n  });\n\n  return data;\n};\n\n// Запит інформації про акторський склад для сторінки кінофільму.\n// https://api.themoviedb.org/3/movie/{movie_id}/credits?api_key=<<api_key>>&language=en-US\n\nexport const getInfoActors = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`, {\n    params: {\n      language: 'en-US',\n    },\n  });\n\n  return data;\n};\n\n// Запит оглядів для сторінки кінофільму.\n// https://api.themoviedb.org/3/movie/{movie_id}/reviews?api_key=<<api_key>>&language=en-US&page=1\n\nexport const getReviewMovies = async (id, page = 1) => {\n  const { data } = await instance.get(`/movie/${id}/reviews`, {\n    params: {\n      language: 'en-US',\n      page,\n    },\n  });\n\n  return data;\n};\n\n// Пошук фільму за ключовим словом на сторінці фільмів.\n// https://api.themoviedb.org/3/search/movie?api_key=<<api_key>>&language=en-US&page=1&include_adult=false\n\nexport const getKeywordMovies = async (query, page = 1) => {\n  const { data } = await instance.get('/search/movie', {\n    params: {\n      query,\n      language: 'en-US',\n      page,\n      include_adult: false,\n    },\n  });\n\n  return data;\n};\n"],"names":["useState","infoActors","setInfoActors","loading","setLoading","error","setError","id","useParams","useEffect","fetchInfoActors","getInfoActors","res","cast","message","elements","map","profile_path","original_name","name","character","className","css","src","alt","width","Loader","length","instance","axios","baseURL","params","api_key","getMovies","page","get","language","data","getInfoMovie","getReviewMovies","getKeywordMovies","query","include_adult"],"sourceRoot":""}