{"version":3,"file":"static/js/952.edfaa70e.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/MovieDetailsList/movie-details-list.module.css?e6ea","components/MovieDetailsList/MovieDetailsList.jsx","pages/MovieDetailsPage/MovieDetailsPage.jsx","services/api/posts.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"buttonBack\":\"movie-details-list_buttonBack__jW5IG\",\"btnBack\":\"movie-details-list_btnBack__gpXOf\",\"wrapperDetailsList\":\"movie-details-list_wrapperDetailsList__Ic8y1\",\"image\":\"movie-details-list_image__V3YeD\",\"description\":\"movie-details-list_description__EbTDp\",\"additional\":\"movie-details-list_additional__eq9Y4\",\"text\":\"movie-details-list_text__5f7DQ\",\"list\":\"movie-details-list_list__csM5y\",\"infoAddit\":\"movie-details-list_infoAddit__14L83\"};","import { Link, Outlet, useNavigate, useLocation } from 'react-router-dom';\nimport { BsArrowLeft } from 'react-icons/bs';\nimport { IconContext } from 'react-icons';\n\nimport css from './movie-details-list.module.css';\n\nconst MovieDetailsList = ({ movie }) => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const from = location.state?.from || '/';\n  const goBack = () => navigate(from);\n\n  return (\n    <div>\n      <div className={css.buttonBack}>\n        <button className={css.btnBack} onClick={goBack} type=\"submit\">\n          <IconContext.Provider\n            value={{\n              color: 'black',\n              size: 12,\n            }}\n          >\n            <BsArrowLeft />\n          </IconContext.Provider>\n          Go back\n        </button>\n      </div>\n\n      <div className={css.wrapperDetailsList}>\n        <div>\n          <img\n            className={css.image}\n            src={`https://image.tmdb.org/t/p/w300${movie.poster_path}`}\n            alt={movie.title}\n            width={200}\n          />\n        </div>\n\n        <div className={css.description}>\n          <h2>\n            {movie?.original_title} (\n            {new Date(movie.release_date).getFullYear()})\n          </h2>\n          <p>User Score: {Math.round(movie.vote_average * 10)}%</p>\n          <h3>Overview</h3>\n          <p>{movie?.overview}</p>\n          <h3>Genres</h3>\n          <p>{movie?.genres?.map(genre => genre.name).join(', ')}</p>\n        </div>\n      </div>\n\n      <div className={css.additional}>\n        <h2 className={css.text}>Additional information</h2>\n        <ul className={css.list}>\n          <Link to=\"cast\" state={{ from }}>\n            <li className={css.infoAddit}>Cast</li>\n          </Link>\n          <Link to=\"reviews\" state={{ from }}>\n            <li className={css.infoAddit}>Reviews</li>\n          </Link>\n        </ul>\n        <Outlet />\n      </div>\n    </div>\n  );\n};\n\nMovieDetailsList.defaultProps = {\n  movie: [],\n};\n\nexport default MovieDetailsList;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport MovieDetailsList from '../../components/MovieDetailsList/MovieDetailsList';\nimport { Loader } from '../../components/Loader/Loader';\nimport { getInfoMovie } from 'services/api/posts';\n\nconst MovieDetailsPage = () => {\n  const [movie, setMovies] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const { id } = useParams();\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      try {\n        setLoading(true);\n        const result = await getInfoMovie(id);\n        setMovies(result);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchMovie();\n  }, [id, setLoading, setError]);\n\n  return (\n    <div>\n      {loading && <Loader />}\n      <MovieDetailsList movie={movie} />\n      {error && <p>...Posts load failed</p>}\n    </div>\n  );\n};\n\nexport default MovieDetailsPage;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '9fae0fdf266213c68361ca578a95b948',\n  },\n});\n\n// Cписок найпопулярніших фільмів на сьогодні для створення колекції на головній сторінці\n// https://api.themoviedb.org/3/trending/all/day?api_key=<<api_key>>\n\nexport const getMovies = async (page = 1) => {\n  const { data } = await instance.get('/trending/movie/day', {\n    params: {\n      page,\n      language: 'en-US',\n    },\n  });\n\n  return data;\n};\n\n// Запит повної інформації про фільм для сторінки кінофільму.\n\nexport const getInfoMovie = async id => {\n  const { data } = await instance.get(`/movie/${id}`, {\n    params: {\n      language: 'en-US',\n    },\n  });\n\n  return data;\n};\n\n// Запит інформації про акторський склад для сторінки кінофільму.\n// https://api.themoviedb.org/3/movie/{movie_id}/credits?api_key=<<api_key>>&language=en-US\n\nexport const getInfoActors = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`, {\n    params: {\n      language: 'en-US',\n    },\n  });\n\n  return data;\n};\n\n// Запит оглядів для сторінки кінофільму.\n// https://api.themoviedb.org/3/movie/{movie_id}/reviews?api_key=<<api_key>>&language=en-US&page=1\n\nexport const getReviewMovies = async (id, page = 1) => {\n  const { data } = await instance.get(`/movie/${id}/reviews`, {\n    params: {\n      language: 'en-US',\n      page,\n    },\n  });\n\n  return data;\n};\n\n// Пошук фільму за ключовим словом на сторінці фільмів.\n// https://api.themoviedb.org/3/search/movie?api_key=<<api_key>>&language=en-US&page=1&include_adult=false\n\nexport const getKeywordMovies = async (query, page = 1) => {\n  const { data } = await instance.get('/search/movie', {\n    params: {\n      query,\n      language: 'en-US',\n      page,\n      include_adult: false,\n    },\n  });\n\n  return data;\n};\n"],"names":["MovieDetailsList","movie","navigate","useNavigate","from","useLocation","state","className","css","onClick","type","value","color","size","src","poster_path","alt","title","width","original_title","Date","release_date","getFullYear","Math","round","vote_average","overview","genres","map","genre","name","join","to","defaultProps","useState","setMovies","loading","setLoading","error","setError","id","useParams","useEffect","fetchMovie","getInfoMovie","result","message","Loader","instance","axios","baseURL","params","api_key","getMovies","page","get","language","data","getInfoActors","getReviewMovies","getKeywordMovies","query","include_adult"],"sourceRoot":""}